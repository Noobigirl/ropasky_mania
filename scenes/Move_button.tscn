[gd_scene load_steps=2 format=3 uid="uid://cxglhn1gc78q4"]

[sub_resource type="GDScript" id="GDScript_hx5ui"]
resource_name = "button_move"
script/source = "extends Button

@export var move: String
var last_player_move: String = \"\"
var difficulty_level: String = MoveHandling.selected_mode # easy by default
func set_move(mov) -> void:
	move = mov
	text = mov # just for now:#
	difficulty_level = MoveHandling.selected_mode
	MoveHandling.stop_playing.connect(disable_button)
	MoveHandling.remove_text.connect(renable_button)

func move_feedback() -> void:
	print(\"you played: \"+ move) # debugging
	GameHandling.move_played_by_p1 = move # saving the move played 
	BotLogic.establish_moves()
	if difficulty_level == \"easy\":
		GameHandling.easy_mode_bot.emit(move) # passing the moved played to the bot
	elif  difficulty_level == \"medium\":
		GameHandling.medium_mode_bot.emit(last_player_move)
	

func disable_button() -> void:
	last_player_move = move
	disabled = true
	
func renable_button() -> void:
	disabled = false
"

[node name="Button" type="Button"]
custom_minimum_size = Vector2(80, 80)
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -35.0
offset_top = -35.0
offset_right = 35.0
offset_bottom = 35.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
mouse_filter = 1
script = SubResource("GDScript_hx5ui")

[connection signal="pressed" from="." to="." method="move_feedback"]
