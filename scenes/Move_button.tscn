[gd_scene load_steps=2 format=3 uid="uid://cxglhn1gc78q4"]

[sub_resource type="GDScript" id="GDScript_d0cmg"]
resource_name = "button_move_margin"
script/source = "extends MarginContainer


@export var move: String
var last_player_move: String = \"\"
var difficulty_level: String = MoveHandling.selected_mode # easy by default
var perm_disabled: bool = false

func set_move(mov) -> void:
	move = mov
	$Button.text = mov # just for now:#
	difficulty_level = MoveHandling.selected_mode
	MoveHandling.stop_playing.connect(disable_button)
	MoveHandling.remove_text.connect(renable_button)

func move_feedback() -> void:
	print(\"you played: \"+ move) # debugging
	
	if move == \"corruption\":
		GameHandling.player_corruption_left -= 1
		# only allowing the player to use corruption 3 times
		if GameHandling.player_corruption_left <= 0:
			perm_disabled = true
			$Button.disabled = true
			move = \"\"
			return
			
	print(\"corruptions left: \", GameHandling.player_corruption_left)		
	GameHandling.move_played_by_p1 = move # saving the move played 
	if difficulty_level == \"easy\":
		GameHandling.easy_mode_bot.emit(move) # passing the move played to the bot
	elif  difficulty_level == \"medium\":
		GameHandling.medium_mode_bot.emit(last_player_move)
	else: # passing the move played and the current status of the game to the bot
		GameHandling.hard_mode_bot.emit(last_player_move, GameHandling.end_game[\"won\"], GameHandling.end_game[\"lost\"])

func disable_button() -> void:
	last_player_move = move # storing the last move played by p1
	$Button.disabled = true
	
func renable_button() -> void:
	if not perm_disabled: # corruption button must not be reanabled
		$Button.disabled = false
"

[node name="MarginContainer" type="MarginContainer"]
offset_right = 40.0
offset_bottom = 40.0
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 5
theme_override_constants/margin_bottom = 5
script = SubResource("GDScript_d0cmg")

[node name="Button" type="Button" parent="."]
custom_minimum_size = Vector2(80, 80)
layout_mode = 2
size_flags_horizontal = 3
mouse_filter = 1

[connection signal="pressed" from="Button" to="." method="move_feedback"]
[connection signal="pressed" from="Button" to="Button" method="move_feedback"]
